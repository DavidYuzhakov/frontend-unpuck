// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Mini App
export class TelegramMiniApp {
  private static instance: TelegramMiniApp
  private webApp: any = null
  private isInitialized = false

  private constructor() {}

  public static getInstance(): TelegramMiniApp {
    if (!TelegramMiniApp.instance) {
      TelegramMiniApp.instance = new TelegramMiniApp()
    }
    return TelegramMiniApp.instance
  }

  public async init(): Promise<boolean> {
    if (this.isInitialized) return true

    try {
      // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ Telegram WebApp
      await this.waitForTelegramWebApp()
      
      if (this.webApp) {
        console.log('üöÄ Telegram Mini App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
        console.log('üîç TWA –≤–µ—Ä—Å–∏—è:', this.webApp.version)
        console.log('üîç TWA –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞:', this.webApp.platform)
        console.log('üîç TWA initDataUnsafe:', this.webApp.initDataUnsafe)
        console.log('üîç TWA initData:', this.webApp.initData)
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º TWA
        this.webApp.ready()
        this.webApp.expand()
        this.webApp.enableClosingConfirmation()
        this.webApp.setHeaderColor('#ffffff')
        this.webApp.setBackgroundColor('#ffffff')
        
        // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        await new Promise(resolve => setTimeout(resolve, 200))
        
        console.log('üîç TWA –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:')
        console.log('üîç isExpanded:', this.webApp.isExpanded)
        console.log('üîç initDataUnsafe –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', this.webApp.initDataUnsafe)
        console.log('üîç user –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', this.webApp.initDataUnsafe?.user)
        
        this.isInitialized = true
        return true
      }
      
      return false
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram Mini App:', error)
      return false
    }
  }

  private async waitForTelegramWebApp(): Promise<void> {
    return new Promise((resolve, reject) => {
      let attempts = 0
      const maxAttempts = 50 // 5 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º
      
      const checkTelegram = () => {
        attempts++
        console.log(`üîç –ü–æ–ø—ã—Ç–∫–∞ ${attempts}/${maxAttempts} –Ω–∞–π—Ç–∏ Telegram WebApp...`)
        
        if (typeof window !== 'undefined' && window.Telegram?.WebApp) {
          this.webApp = window.Telegram.WebApp
          console.log('‚úÖ Telegram WebApp –Ω–∞–π–¥–µ–Ω:', this.webApp)
          console.log('üîç initDataUnsafe:', this.webApp.initDataUnsafe)
          console.log('üîç user:', this.webApp.initDataUnsafe?.user)
          resolve()
        } else if (attempts >= maxAttempts) {
          console.log('‚ùå Telegram WebApp –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ø—ã—Ç–æ–∫')
          reject(new Error('Telegram WebApp –Ω–µ –Ω–∞–π–¥–µ–Ω'))
        } else {
          setTimeout(checkTelegram, 100)
        }
      }
      checkTelegram()
    })
  }

  public getWebApp(): any {
    return this.webApp
  }

  public isInTelegram(): boolean {
    return this.webApp !== null && this.isInitialized
  }

  public getUserData(): any {
    return this.webApp?.initDataUnsafe?.user || null
  }

  public getInitData(): string {
    return this.webApp?.initData || ''
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
export const telegramApp = TelegramMiniApp.getInstance()
