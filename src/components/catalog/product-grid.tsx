'use client'

import { productsAPI } from '@/lib/api'
import { Product } from '@/types'
import { useEffect, useRef, useState } from 'react'
import { ProductCard } from './product-card'

interface ProductGridProps {
  viewMode: 'grid' | 'list'
  searchQuery: string
  category: string
  showFavorites?: boolean
  priceRange?: { min: number; max: number }
  sortBy?: 'newest' | 'price-low' | 'price-high' | 'rating'
  onFavoritesCountChange?: (count: number) => void
}

export function ProductGrid({
  viewMode,
  searchQuery,
  category,
  showFavorites = false,
  priceRange = { min: 0, max: 0 },
  sortBy = 'newest',
  onFavoritesCountChange,
}: ProductGridProps) {
  const [products, setProducts] = useState<Product[]>([])
  const [loading, setLoading] = useState(true)
  const [loadingMore, setLoadingMore] = useState(false)
  const [error, setError] = useState<string | null>(null)
  const [favorites, setFavorites] = useState<string[]>([])
  const [hasMore, setHasMore] = useState(true)
  const [total, setTotal] = useState(0)
  const [offset, setOffset] = useState(0)
  const loadMoreRef = useRef<HTMLDivElement>(null)

  // –ü–æ–ª—É—á–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ localStorage
  const getFavoritesFromStorage = () => {
    if (typeof window === 'undefined') return []
    try {
      return JSON.parse(localStorage.getItem('favorites') || '[]')
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error)
      return []
    }
  }

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å —Å–µ—Ä–≤–µ—Ä–∞
  const loadProducts = async (isLoadMore = false) => {
    const params = {
      search: searchQuery || undefined,
      category: category !== 'all' ? category : undefined,
      minPrice: priceRange.min > 0 ? priceRange.min : undefined,
      maxPrice: priceRange.max > 0 ? priceRange.max : undefined,
      sortBy:
        sortBy === 'newest'
          ? 'date'
          : sortBy === 'price-low'
          ? 'price'
          : sortBy === 'price-high'
          ? 'price'
          : 'rating',
      sortOrder: sortBy === 'price-high' ? 'desc' : 'asc',
      limit: isLoadMore ? 10 : 30,
      offset: isLoadMore ? offset : 0,
    }

    if (isLoadMore) {
      setLoadingMore(true)
    } else {
      setLoading(true)
      setError(null)
      setOffset(0)
    }

    try {
      console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', params)

      const response = await productsAPI.getProducts(params)
      console.log('‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.data)

      const productsData =
        response.data.products || response.data.data || response.data
      const newTotal = response.data.pagination?.total || 0
      const currentOffset = isLoadMore ? offset : 0
      const currentLimit = isLoadMore ? 10 : 30
      const newHasMore = currentOffset + currentLimit < newTotal

      if (isLoadMore) {
        setProducts((prev) => {
          const existingIds = new Set(prev.map((item) => item.id))
          const newProducts = Array.isArray(productsData)
            ? productsData.filter((item) => !existingIds.has(item.id))
            : []
          return [...prev, ...newProducts]
        })
        setOffset((prev) => prev + 10)
      } else {
        setProducts(Array.isArray(productsData) ? productsData : [])
        setOffset(30)
      }

      setTotal(newTotal)
      setHasMore(newHasMore)
    } catch (err: any) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', err)
      setError(err.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤')
      setProducts([])
      setTotal(0)
      setHasMore(false)
    } finally {
      if (isLoadMore) {
        setLoadingMore(false)
      } else {
        setLoading(false)
      }
    }
  }

  // –ü–æ–¥–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
  const loadMore = () => {
    if (!loadingMore && hasMore) {
      loadProducts(true)
    }
  }

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  useEffect(() => {
    loadProducts()
  }, [searchQuery, category, priceRange, sortBy])

  // Intersection Observer –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥—Ä—É–∑–∫–∏
  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        const target = entries[0]
        if (target.isIntersecting && hasMore && !loadingMore && !loading) {
          loadMore()
        }
      },
      {
        rootMargin: '100px',
      }
    )

    if (loadMoreRef.current) {
      observer.observe(loadMoreRef.current)
    }

    return () => {
      observer.disconnect()
    }
  }, [hasMore, loadingMore, loading])

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    if (typeof window === 'undefined') return

    const initialFavorites = getFavoritesFromStorage()
    setFavorites(initialFavorites)

    if (onFavoritesCountChange) {
      onFavoritesCountChange(initialFavorites.length)
    }
  }, [onFavoritesCountChange])

  // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ localStorage
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
    if (typeof window === 'undefined') return

    const handleStorageChange = () => {
      const newFavorites = getFavoritesFromStorage()
      setFavorites(newFavorites)

      // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
      if (onFavoritesCountChange) {
        onFavoritesCountChange(newFavorites.length)
      }
    }

    window.addEventListener('storage', handleStorageChange)
    window.addEventListener('favoritesChanged', handleStorageChange)

    return () => {
      window.removeEventListener('storage', handleStorageChange)
      window.removeEventListener('favoritesChanged', handleStorageChange)
    }
  }, [onFavoritesCountChange])

  // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  const toggleFavorite = (productId: string) => {
    const newFavorites = favorites.includes(productId)
      ? favorites.filter((id) => id !== productId)
      : [...favorites, productId]

    setFavorites(newFavorites)

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
    if (typeof window !== 'undefined') {
      localStorage.setItem('favorites', JSON.stringify(newFavorites))
    }

    onFavoritesCountChange?.(newFavorites.length)
  }

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ)
  let filteredProducts = products.filter((product) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    const isInFavorites = favorites.includes(product.id)
    const matchesFavorites =
      !showFavorites || isInFavorites || product.isFavorite

    return matchesFavorites
  })

  if (loading) {
    return (
      <div className="flex flex-col items-center justify-center py-12">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mb-4"></div>
        <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...</p>
      </div>
    )
  }

  if (error) {
    return (
      <div className="flex flex-col items-center justify-center py-12">
        <div className="text-red-400 mb-4">
          <svg
            className="w-16 h-16"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={1}
              d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"
            />
          </svg>
        </div>
        <h3 className="text-lg font-medium text-gray-900 mb-2">
          –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
        </h3>
        <p className="text-gray-500 text-center mb-4">{error}</p>
        <button
          onClick={() => loadProducts()}
          className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
        >
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </button>
      </div>
    )
  }

  if (filteredProducts.length === 0) {
    return (
      <div className="flex flex-col items-center justify-center py-12">
        <div className="text-gray-400 mb-4">
          <svg
            className="w-16 h-16"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={1}
              d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
            />
          </svg>
        </div>
        <h3 className="text-lg font-medium text-gray-900 mb-2">
          –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
        </h3>
        <p className="text-gray-500 text-center">
          –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä—ã
        </p>
      </div>
    )
  }

  return (
    <div className="space-y-6">
      <div className="grid grid-cols-2 gap-4">
        {filteredProducts.map((product, index) => (
          <ProductCard
            key={product.id}
            product={product}
            viewMode={viewMode}
            priority={index < 4} // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –ø–µ—Ä–≤—ã—Ö 4 —Ç–æ–≤–∞—Ä–æ–≤
            isFavorite={favorites.includes(product.id)}
            onToggleFavorite={toggleFavorite}
          />
        ))}
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–¥–≥—Ä—É–∑–∫–∏ */}
      {hasMore && (
        <div className="flex justify-center py-4">
          <button
            onClick={loadMore}
            disabled={loadingMore}
            className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
          >
            {loadingMore ? '–ó–∞–≥—Ä—É–∂–∞–µ–º...' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ'}
          </button>
        </div>
      )}

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
      {loadingMore && (
        <div className="flex justify-center py-4">
          <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600"></div>
        </div>
      )}

      {/* –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ */}
      <div ref={loadMoreRef} className="h-4" />
    </div>
  )
}
